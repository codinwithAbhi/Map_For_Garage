{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\FIND_BIKE_STATION\\\\find-bike-frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MapComponent from \"../components/LeafletMap\";\nimport \"../styles/home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [garages, setGarages] = useState([]);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const {\n          latitude,\n          longitude\n        } = pos.coords;\n        const userCoords = [latitude, longitude];\n        setUserLocation(userCoords);\n\n        // Fetch garages from Google Places API\n        const nearbyGarages = await fetchNearbyGarages(latitude, longitude);\n        //   setGarages(\n        //     nearbyGarages.map((place) => ({\n        //       position: [place.geometry.location.lat, place.geometry.location.lng],\n        //       popup: place.name,\n        //     }))\n        //   );\n      }, error => console.error(\"Error getting location:\", error), {\n        enableHighAccuracy: true\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  const fetchNearbyGarages = async (lat, lng) => {\n    const fakeGarages = [{\n      position: [lat + 0.002, lng + 0.002],\n      popup: \"Garage A\"\n    }, {\n      position: [lat - 0.002, lng - 0.002],\n      popup: \"Garage B\"\n    }, {\n      position: [lat + 0.001, lng - 0.002],\n      popup: \"Garage C\"\n    }];\n    setGarages(fakeGarages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-wrapper\",\n      children: userLocation ? /*#__PURE__*/_jsxDEV(MapComponent, {\n        center: userLocation,\n        userLocation: userLocation,\n        markers: garages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading location...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"yaKarncgKh3TD/Zi+U9OXq6L2fs=\");\n_c = Home;\nconst fetchNearbyGarages = async (lat, lng) => {\n  const API_KEY = \"YOUR_GOOGLE_MAPS_API_KEY\"; // Replace with your API Key\n  const radius = 1000; // 1 km search radius\n  const type = \"car_repair\"; // Fetches garages\n\n  const url = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lng}&radius=${radius}&type=${type}&key=${API_KEY}`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results.map(place => ({\n      id: place.place_id,\n      position: [place.geometry.location.lat, place.geometry.location.lng],\n      name: place.name,\n      address: place.vicinity,\n      rating: place.rating || \"No rating\",\n      distance: getDistance(lat, lng, place.geometry.location.lat, place.geometry.location.lng),\n      photo: place.photos ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=200&photoreference=${place.photos[0].photo_reference}&key=${API_KEY}` : \"https://via.placeholder.com/200\" // Default image if no photo\n    }));\n  } catch (error) {\n    console.error(\"Error fetching garages:\", error);\n    return [];\n  }\n};\nconst getDistance = (lat1, lon1, lat2, lon2) => {\n  const toRad = x => x * Math.PI / 180;\n  const R = 6371; // Radius of Earth in km\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return (R * c).toFixed(2) + \" km\";\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","jsxDEV","_jsxDEV","Home","_s","userLocation","setUserLocation","garages","setGarages","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","userCoords","nearbyGarages","fetchNearbyGarages","error","console","enableHighAccuracy","lat","lng","fakeGarages","position","popup","className","children","center","markers","fileName","_jsxFileName","lineNumber","columnNumber","_c","API_KEY","radius","type","url","response","fetch","data","json","results","map","place","id","place_id","geometry","location","name","address","vicinity","rating","distance","getDistance","photo","photos","photo_reference","lat1","lon1","lat2","lon2","toRad","x","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","toFixed","$RefreshReg$"],"sources":["C:/Projects/FIND_BIKE_STATION/find-bike-frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MapComponent from \"../components/LeafletMap\";\r\nimport \"../styles/home.css\";\r\n\r\nexport default function Home() {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [garages, setGarages] = useState([]); \r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (pos) => {\r\n          const { latitude, longitude } = pos.coords;\r\n          const userCoords = [latitude, longitude];\r\n          setUserLocation(userCoords);\r\n\r\n          // Fetch garages from Google Places API\r\n          const nearbyGarages = await fetchNearbyGarages(latitude, longitude);\r\n        //   setGarages(\r\n        //     nearbyGarages.map((place) => ({\r\n        //       position: [place.geometry.location.lat, place.geometry.location.lng],\r\n        //       popup: place.name,\r\n        //     }))\r\n        //   );\r\n        },\r\n        (error) => console.error(\"Error getting location:\", error),\r\n        { enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }, []);\r\n\r\n  const fetchNearbyGarages = async (lat, lng) => {\r\n    const fakeGarages = [\r\n      { position: [lat + 0.002, lng + 0.002], popup: \"Garage A\" },\r\n      { position: [lat - 0.002, lng - 0.002], popup: \"Garage B\" },\r\n      { position: [lat + 0.001, lng - 0.002], popup: \"Garage C\" },\r\n    ];\r\n    setGarages(fakeGarages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"map-wrapper\">\r\n        {userLocation ? (\r\n          <MapComponent center={userLocation} userLocation={userLocation} markers={garages} />\r\n        ) : (\r\n          <p>Loading location...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst fetchNearbyGarages = async (lat, lng) => {\r\n    const API_KEY = \"YOUR_GOOGLE_MAPS_API_KEY\"; // Replace with your API Key\r\n    const radius = 1000; // 1 km search radius\r\n    const type = \"car_repair\"; // Fetches garages\r\n  \r\n    const url = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lng}&radius=${radius}&type=${type}&key=${API_KEY}`;\r\n  \r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n  \r\n      return data.results.map((place) => ({\r\n        id: place.place_id,\r\n        position: [place.geometry.location.lat, place.geometry.location.lng],\r\n        name: place.name,\r\n        address: place.vicinity,\r\n        rating: place.rating || \"No rating\",\r\n        distance: getDistance(lat, lng, place.geometry.location.lat, place.geometry.location.lng),\r\n        photo: place.photos\r\n          ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=200&photoreference=${place.photos[0].photo_reference}&key=${API_KEY}`\r\n          : \"https://via.placeholder.com/200\", // Default image if no photo\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching garages:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\nconst getDistance = (lat1, lon1, lat2, lon2) => {\r\n    const toRad = (x) => (x * Math.PI) / 180;\r\n    const R = 6371; // Radius of Earth in km\r\n    const dLat = toRad(lat2 - lat1);\r\n    const dLon = toRad(lon2 - lon1);\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\r\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return (R * c).toFixed(2) + \" km\";\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}